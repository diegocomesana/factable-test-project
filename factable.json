{
  "config": {
    "tests_import_style": "commonjs"
  },
  "tests": {
    "src/common.js": {
      "arrayElementsWrapper": {
        "25a7106e6aebb404bb39775f14ad4834": {
          "caseDescription": "vamos carajo!!",
          "relativeFilePath": "src/common.js",
          "testRelativeFilePath": "src/__tests__/common/array-elements-wrapper.spec.js",
          "testRelativePath": "src/__tests__/common",
          "testFileName": "array-elements-wrapper.spec.js",
          "functionName": "arrayElementsWrapper",
          "ioHash": "25a7106e6aebb404bb39775f14ad4834",
          "params": [
            [
              "str1",
              "str2"
            ],
            [
              "arr"
            ]
          ],
          "args": [
            {
              "type": "string",
              "valueString": "\"<DIEGO_1>\""
            },
            {
              "type": "string",
              "valueString": "\"</DIEGO_1>\""
            },
            {
              "type": "object",
              "valueString": "[\n  \"camila\",\n  \"paula\",\n  \"salvi\",\n  \"laurín\",\n  \"diego\"\n]"
            }
          ],
          "inputData": [
            {
              "name": "str1",
              "type": "string",
              "value": "\"<DIEGO_1>\""
            },
            {
              "name": "str2",
              "type": "string",
              "value": "\"</DIEGO_1>\""
            },
            {
              "name": "arr",
              "type": "object",
              "value": "[\n  \"camila\",\n  \"paula\",\n  \"salvi\",\n  \"laurín\",\n  \"diego\"\n]"
            }
          ],
          "expectedOutputString": "[\n  \"<DIEGO_1>camila</DIEGO_1>\",\n  \"<DIEGO_1>paula</DIEGO_1>\",\n  \"<DIEGO_1>salvi</DIEGO_1>\",\n  \"<DIEGO_1>laurín</DIEGO_1>\",\n  \"<DIEGO_1>diego</DIEGO_1>\"\n]",
          "removeFile": "path => {\n  return new Promise((resolve, reject) => {\n    _fs.default.unlink(path, err => {\n      if (err) reject(err);\n      resolve(path);\n    });\n  });\n}"
        }
      },
      "someFancyFunc": {
        "29434ecd1063de8c125feb0f438c4016": {
          "caseDescription": "test caso nuevo!!",
          "relativeFilePath": "src/common.js",
          "testRelativeFilePath": "src/__tests__/common/some-fancy-func.spec.js",
          "testRelativePath": "src/__tests__/common",
          "testFileName": "some-fancy-func.spec.js",
          "functionName": "someFancyFunc",
          "ioHash": "29434ecd1063de8c125feb0f438c4016",
          "params": [
            [
              "{foo, bar, dontshowthis}",
              "second"
            ],
            [
              "baz"
            ]
          ],
          "args": [
            {
              "type": "object",
              "valueString": "{\n  \"foo\": \"still\",\n  \"bar\": \"working\",\n  \"dontshowthis\": false\n}"
            },
            {
              "type": "string",
              "valueString": "\"hello\""
            },
            {
              "type": "string",
              "valueString": "\"fine\""
            }
          ],
          "inputData": [
            {
              "name": "{foo, bar, dontshowthis}",
              "type": "object",
              "value": "{\n  \"foo\": \"still\",\n  \"bar\": \"working\",\n  \"dontshowthis\": false\n}"
            },
            {
              "name": "second",
              "type": "string",
              "value": "\"hello\""
            },
            {
              "name": "baz",
              "type": "string",
              "value": "\"fine\""
            }
          ],
          "expectedOutputString": "\"stillworkinghellofine SOMETHING CHANGED IN THE OUTPUT!!\"",
          "removeFile": "path => {\n  return new Promise((resolve, reject) => {\n    _fs.default.unlink(path, err => {\n      if (err) reject(err);\n      resolve(path);\n    });\n  });\n}"
        }
      },
      "destructuredProps": {
        "1e83d1b5487c33e468de2a7fa0d7895d": {
          "caseDescription": "hjhjhjhj",
          "relativeFilePath": "src/common.js",
          "testRelativeFilePath": "src/__tests__/common/destructured-props.spec.js",
          "testRelativePath": "src/__tests__/common",
          "testFileName": "destructured-props.spec.js",
          "functionName": "destructuredProps",
          "ioHash": "1e83d1b5487c33e468de2a7fa0d7895d",
          "params": [
            [
              "{foo, bar, dontshowthis}",
              "vamos"
            ],
            [
              "meGusta"
            ]
          ],
          "args": [
            {
              "type": "object",
              "valueString": "{\n  \"foo\": \"still\",\n  \"bar\": \"working\",\n  \"dontshowthis\": false\n}"
            },
            {
              "type": "string",
              "valueString": "\"yeahh\""
            },
            {
              "type": "string",
              "valueString": "\"fine\""
            }
          ],
          "inputData": [
            {
              "name": "{foo, bar, dontshowthis}",
              "type": "object",
              "value": "{\n  \"foo\": \"still\",\n  \"bar\": \"working\",\n  \"dontshowthis\": false\n}"
            },
            {
              "name": "vamos",
              "type": "string",
              "value": "\"yeahh\""
            },
            {
              "name": "meGusta",
              "type": "string",
              "value": "\"fine\""
            }
          ],
          "expectedOutputString": "\"stillworkingyeahhfine\"",
          "removeFile": "path => {\n  return new Promise((resolve, reject) => {\n    _fs.default.unlink(path, err => {\n      if (err) reject(err);\n      resolve(path);\n    });\n  });\n}"
        }
      }
    }
  }
}